<script name="active-searches-js">

function onActiveCompleted()
{
	let handler = window.jsHandler;
	if( undefined === handler || null === handler || !(handler) ) { return; }
	handler.populate();
}

function injectJson(json) {
	$(active_search.controls.txjson).text(json);
	active_search.bind.all();
}


let active_search = {
	"controls": {
		"txjson" : "#text-my-active-searches-js",
		"cbo" : "#cbo-my-active-searches",
		"cbo_option" : "#cbo-my-active-searches option",
		"heading_no_data": "#heading-my-active-searches-no-content",
		"component_list": "#list-my-active-search-stages",
		"component_list_template": "#list-my-active-search-stages li:first",
		"component_last_item": "#list-my-active-search-stages li:last",
		"status_list": "#list-my-active-search-statuses",
		"status_list_template": "#list-my-active-search-statuses li:first",
		"status_last_item": "#list-my-active-search-statuses li:last"
	},
	"change_view": function(viewName){
		let handler = window.jsHandler;
		if( undefined === handler || null === handler || !(handler) ) { return; }
		handler.reload(viewName);
	},
	"jso": function(){
		const nodata = {
			"details": [],
			"history": {
				"searches": [],
				"statuses": [],
				"staged": []
			}
		};
		try
		{
		let js = $(active_search.controls.txjson).text().trim();
		if (null == js || undefined == js || js.length == 0) { return nodata; }
		return JSON.parse(js);
		}
		catch
		{ 
		return nodata; 
		}		
	},
	"get_download_invoice": function() {
		const dbd = "disabled";
		mssagesid= "#dv-active-searches-messages";
		$(mssagesid).html("Purchase active search is clicked.")
		let bttn = "#list-my-active-search-names button[name='bttn-get-my-active-download']";
		let $cbo = $( active_search.controls.cbo );
		let cboid = $cbo.val();
		$(mssagesid).html("Purchase active search looking for item: ~0.".replace('~0', cbo.id));
		let jso = active_search.jso();
		let src = jso.details[cboid];
		let srcid = src.id
		$(mssagesid).html("Purchase active search item id: ~0.".replace('~0', srcid));

		let handler = window.jsHandler;
		if( undefined === handler || null === handler || !(handler) ) { 
			$(mssagesid).html("unable to find js handler");
			return; 
		}
		$cbo.attr(dbd, dbd);
		$( bttn ).attr( dbd, dbd );
		var obj = JSON.stringify( { "id": srcid });
		handler.submit( "frm-search-invoice", obj);
	},
	"component_template": function(isFirst) {
		let openLi = isFirst ? 
			"<li name='component-template' class='list-group-item text-start m-0 p-0'>" :
			"<li name='component-item' class='list-group-item text-start m-0 p-0'>";
		const closeLi = "</li>";
		let item = $(active_search.controls.component_list_template).html();
		return "".concat(openLi, item, closeLi);
	},
	"status_template": function(isFirst) {
		let openLi = isFirst ? 
			"<li name='component-template' class='list-group-item text-start m-0 p-0'>" :
			"<li name='component-item' class='list-group-item text-start m-0 p-0'>";
		const closeLi = "</li>";
		let item = $(active_search.controls.status_list_template).html();
		return "".concat(openLi, item, closeLi);
	},
	combo_changed: function() {
		active_search.bind.search();
		active_search.bind.staged_components();
		active_search.bind.status_components();
	},
	bind: {
		"all": function() {
			active_search.bind.header();
			active_search.bind.cbo();
			active_search.bind.search();
			active_search.bind.staged_components();
			active_search.bind.status_components();
		},
		"header": function() {
			let src = active_search.jso();
			let hdr = active_search.controls.heading_no_data;
			let hasNoData = ( undefined == src || null == src || undefined == src.details || null == src.details || src.details.length == 0 );
			if (hasNoData) {
				$(hdr).show();
			} else {
				let txt = "Found ( ~0 ) searches in progress".replace("~0", src.details.length);
				$(hdr).text(txt);
				$(hdr).show();
			}
		},
		"cbo": function() {
			let src = active_search.jso();
			let bttn = "#list-my-active-search-names button[name='bttn-get-my-active-download']";
			cbo = active_search.controls.cbo;
			cboid = 0;
			$( cbo ).html("");
			if ( undefined == src || null == src || undefined == src.details || null == src.details || src.details.length == 0 ) {
				return;
			}
			src.details.forEach(function(d) {
				let hto = cboid == 0 ? "<option selected='selected' value='~0'>~1</option>" : "<option value='~0'>~1</option>";
				let txt = "".concat( d.countyName, " ", d.stateName, " from " , d.startDate.split(' ')[0], " to " , d.endDate.split(' ')[0]);
				// note: all dates from server are utc, 
				// try appending 'Z' into dt logic
				let dstring = "".concat(d.createDate, "Z");
				let dte =  new Date(dstring); // new Date(Date.parse(dstring)); 
				let dtxt = dte.toLocaleDateString('en-us', { weekday:"long", year:"numeric", month:"short", day:"numeric"}).toUpperCase();
				txt+= (" on " + dtxt);
				hto = hto.replace("~0", cboid);
				hto = hto.replace("~1", txt);
				html = $( cbo ).html() + hto;
				$( cbo ).html(html);
				cboid++;
			});
			$( bttn ).attr('onclick', 'active_search.get_download_invoice()');
		},
		"search": function() {
			let cbcount = $( active_search.controls.cbo_option ).length;
			let bttn = "#list-my-active-search-names button[name='bttn-get-my-active-download']";
			let data = [
				{ "find": "#list-my-active-search-names span[name='requested-date']", "value": " - " },
				{ "find": "#list-my-active-search-names span[name='start-date']", "value": " - " },
				{ "find": "#list-my-active-search-names span[name='search-status']", "value": " - " },
			];
			let statuses = [
				{ "name": "Submitted", "code": "text-white" },
				{ "name": "Processing", "code": "text-warning" },
				{ "name": "Completed", "code": "text-success" },
				{ "name": "Purchased", "code": "text-info" },
				{ "name": "Downloaded", "code": "text-primary" },
				{ "name": "Error", "code": "text-danger" },
			];
			$( bttn ).attr( 'disabled', 'disabled' );
			data.forEach((d) => { $(d.find).text(d.value); });
			if ( cbcount == 0 ) { return; }
			let $cbo = $( active_search.controls.cbo );
			let cboid = $cbo.val();
			let jso = active_search.jso();
			let src = jso.details[cboid];
			let srcid = src.id
			let jssearch = jso.history.searches.find(x => x.id == srcid);
			let artmp = src.searchProgress.split(' ');
			let sts = artmp[artmp.length - 1];
			let tmpdt = src.createDate.split('T')
			data[0].value = tmpdt.join(" ");
			data[1].value = jssearch.startDate.split('.')[0];			
			data[2].value = sts;
			data.forEach((d) => { $(d.find).text(d.value); });
			var $statusSpan = $(data[2].find);
			statuses.forEach((s) => $statusSpan.removeClass(s.code));
			var selected = statuses.find(x => x.name == sts);
			if (selected != null) {
				$statusSpan.addClass(selected.code);
			}
			if (selected != null && selected.name == 'Completed') {
				$( bttn ).removeAttr( 'disabled' );
			}
		},
		"staged_components": function() {
			let cbcount = $( active_search.controls.cbo_option ).length;
			if ( cbcount == 0 ) { return; }
			let $cbo = $( active_search.controls.cbo );
			let cboid = $cbo.val();
			let jso = active_search.jso();
			let src = jso.details[cboid];
			let srcid = src.id
			let jssearch = jso.history.staged.filter(x => x.searchId == srcid);
			let blanktemplate = active_search.component_template(true);
			let template = active_search.component_template(false);
			let $list = $( active_search.controls.component_list );
			$list.html(blanktemplate);
			jssearch.forEach(function(s) {
				let htnow = $list.html() + template;
				$list.html(htnow);
				let $li = $(active_search.controls.component_last_item);
				$li.find("span[name='stage-label']").text(s.stagingType);
				$li.find("span[name='stage-date']").text(s.createDate.split('.')[0]);
			});
		},
		"status_components": function() {
			let cbcount = $( active_search.controls.cbo_option ).length;
			if ( cbcount == 0 ) { return; }
			let $cbo = $( active_search.controls.cbo );
			let cboid = $cbo.val();
			let jso = active_search.jso();
			let src = jso.details[cboid];
			let srcid = src.id
			let jssearch = jso.history.statuses.filter(x => x.searchId == srcid);
			let blanktemplate = active_search.status_template(true);
			let template = active_search.status_template(false);
			let $list = $( active_search.controls.status_list );
			$list.html(blanktemplate);
			jssearch.forEach(function(s) {
				let htnow = $list.html() + template;
				$list.html(htnow);
				let $li = $(active_search.controls.status_last_item);
				$li.find("span[name='status-label']").text(s.line);
				$li.find("span[name='status-date']").text(s.createDate.split('.')[0]);
			});
		}
	}
};

active_search.bind.all();

setTimeout(function(){ onActiveCompleted(); }, 1000);
</script>